@model List<ScheduleData>
@using System.Text.RegularExpressions

<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<script src="~/js/ScheduleScript.js"></script>

@if (ViewBag.ErrorMessage != null)
{
    <div style="display: flex; justify-content: space-between; align-items: center; width: 3370px;height:288px;">
        <a class="nav-link active" href="/Schedule/Index" style="margin-left: 90px; display: inline-block;">
            <img src="~/img/back_but.png" alt="назад" style="width: auto; height: auto;">
        </a>

    </div>
    <div class="scheduleContainer">
        <h2 style="padding: 50px; margin: 50px; text-align:center;">@ViewBag.ErrorMessage</h2>
    </div>
}
else if (Model != null && Model.Any())  // Проверка на наличие данных
{
    <div style="display: flex; justify-content: space-between; align-items: center; width: 3370px; ">
        <a class="nav-link active" href="/Schedule/Index" style="margin-left: 90px; display: inline-block;">
            <img src="~/img/back_but.png" alt="назад" style="width: auto; height: auto;">
        </a>

        <h1 style="margin: 0 auto;">@Model[0].Group</h1>
    </div>
    <div class="scheduleContainer">
        <div class="сontainer">
            <table class="table rounded-lg">
                <tr class="title">
                    <th>Тип недели</th>
                    <th>Время</th>
                    <th>Аудитория</th>

                    <th>Предмет</th>
                    <th>Преподаватель</th>
                </tr>
                @foreach (var dayGroup in Model.GroupBy(item => item.DayOfWeek))
                {
                    <tr class="subtitle">
                        <th colspan="5">@dayGroup.Key</th>
                    </tr>
                    foreach (var item in dayGroup)
                    {
                        <tr class="tableRow rounded-bottom">
                            <td>@item.WeekType</td>
                            <td>@($"{item.StartTime:hh\\:mm} - {item.EndTime:hh\\:mm}")</td>
                            <td>
                                @{
                                    // Убираем пробелы спереди и сзади
                                    var classroom = item.Classroom?.Trim();
                                    string roomId = null;

                                    if (!string.IsNullOrEmpty(classroom) && classroom.StartsWith("У"))
                                    {
                                        // Убираем "У", убираем оставшиеся пробелы
                                        var remainingText = classroom.Substring(1).Trim();

                                        // Регулярное выражение: 2-3 цифры, опционально одна буква
                                        var regex = new Regex(@"^\d{2,3}[a-z]?$", RegexOptions.IgnoreCase);

                                        // Проверяем формат текста после "У"
                                        if (regex.IsMatch(remainingText))
                                        {
                                            roomId = remainingText.ToLower(); // Приводим к нижнему регистру
                                        }
                                    }

                                    // Если roomId сформирован, делаем ссылку
                                    if (roomId != null)
                                    {
                                        <a style="color:#361778;" href="@($"http://localhost:8082/Map/Index?roomId={roomId}")">@classroom</a>
                                    }
                                    else
                                    {
                                        // Иначе просто выводим текст
                                        @classroom
                                    }
                                }
                            </td>

                            @if (!string.IsNullOrEmpty(item.Subject))
                            {
                                <td style="max-width:1050px;">@Html.Raw(@item.Subject)<br><small>@Html.Raw(@item.ScheduleInfo)</small></td>
                            }
                            else
                            {
                                <td style="max-width:1050px;">@Html.Raw(@item.ScheduleInfo)</td>
                            }

                            @if (item.Instructor != null)
                            {
                                <td style="color:#361778;" onclick="openModalInfo('@item.Instructor.NameContact','@item.Instructor.UniversityIdContact')">
                                    @item.Instructor.NameContact
                                </td>
                            }
                            else
                            {
                                <td></td>
                            }
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
}
else
{
    <div style="display: flex; justify-content: space-between; align-items: center; width: 3370px;height:288px;">
        <a class="nav-link active" href="/Schedule/Index" style="margin-left: 90px; display: inline-block;">
            <img src="~/img/back_but.png" alt="назад" style="width: auto; height: auto;">
        </a>

    </div>

    <div class="scheduleContainer">
        <h2 style="padding: 50px; margin: 50px; text-align:center;">Расписание отсутствует</h2>
    </div>
}

<form>
    <div class="input-group">
        <input type="text" class="form-control" id="searchInput" placeholder="введите номер группы или ФИО преподавателя">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary search-button" type="button" onclick="getSchedule(document.getElementById('searchInput').value)">
                <img src="../img/search_button.png" alt="Search">
            </button>
        </div>
    </div>
</form>

